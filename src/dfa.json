{
  "dfa_config": {
    "start_state": "q0",
    "final_states": [
      "q_identifier",
      "q_number",
      "q_float",
      "q_char_lit",
      "q_string_lit",
      "q_comment"
    ]
  },
  
  "keyword_lookup": {
    "keywords": [
      "program", "var", "begin", "end", "if", "then", "else",
      "while", "do", "for", "to", "downto", "integer", "real",
      "boolean", "char", "array", "of", "procedure", "function",
      "const", "type"
    ],
    "logical_operators": ["and", "or", "not"],
    "arithmetic_word_operators": ["div", "mod"]
  },
  
  "transitions": [
    {
      "comment": "IDENTIFIER/KEYWORD - Pattern: letter (letter|digit|_)*",
      "rules": [
        {"from": "q0", "input": "letter", "to": "q_identifier"},
        {"from": "q_identifier", "input": "letter", "to": "q_identifier"},
        {"from": "q_identifier", "input": "digit", "to": "q_identifier"},
        {"from": "q_identifier", "input": "_", "to": "q_identifier"}
      ]
    },
    {
      "comment": "NUMBER - Pattern: digit+ or digit+ . digit+",
      "rules": [
        {"from": "q0", "input": "digit", "to": "q_number"},
        {"from": "q_number", "input": "digit", "to": "q_number"},
        {"from": "q_number", "input": ".", "to": "q_dot"},
        {"from": "q_dot", "input": "digit", "to": "q_float"},
        {"from": "q_float", "input": "digit", "to": "q_float"}
      ]
    },
    {
      "comment": "CHARACTER LITERAL - Pattern: 'c'",
      "rules": [
        {"from": "q0", "input": "'", "to": "q_char_start"},
        {"from": "q_char_start", "input": "any", "to": "q_char_content"},
        {"from": "q_char_content", "input": "'", "to": "q_char_lit"}
      ]
    },
    {
      "comment": "STRING LITERAL - Pattern: 'chars+'",
      "rules": [
        {"from": "q_char_content", "input": "any", "to": "q_string_content"},
        {"from": "q_string_content", "input": "any", "to": "q_string_content"},
        {"from": "q_string_content", "input": "'", "to": "q_string_lit"}
      ]
    },
    {
      "comment": "COMMENT - Pattern: {...} or (*...*)  ",
      "rules": [
        {"from": "q0", "input": "{", "to": "q_comment_brace"},
        {"from": "q_comment_brace", "input": "any", "to": "q_comment_brace"},
        {"from": "q_comment_brace", "input": "}", "to": "q_comment"},
        {"from": "q0", "input": "(", "to": "q_lparen_or_comment"},
        {"from": "q_lparen_or_comment", "input": "*", "to": "q_comment_paren"},
        {"from": "q_comment_paren", "input": "any", "to": "q_comment_paren"},
        {"from": "q_comment_paren", "input": "*", "to": "q_comment_star"},
        {"from": "q_comment_star", "input": ")", "to": "q_comment"},
        {"from": "q_comment_star", "input": "any", "to": "q_comment_paren"}
      ]
    },
    {
      "comment": "WHITESPACE - ignored",
      "rules": [
        {"from": "q0", "input": "space", "to": "q0"},
        {"from": "q0", "input": "tab", "to": "q0"},
        {"from": "q0", "input": "newline", "to": "q0"}
      ]
    }
  ],
  
  "state_token_map": {
    "q_identifier": "IDENTIFIER",
    "q_number": "NUMBER",
    "q_float": "NUMBER",
    "q_char_lit": "CHAR_LITERAL",
    "q_string_lit": "STRING_LITERAL",
    "q_comment": "COMMENT"
  },
  
  "single_char_tokens": {
    "+": "ARITHMETIC_OPERATOR",
    "-": "ARITHMETIC_OPERATOR",
    "*": "ARITHMETIC_OPERATOR",
    "/": "ARITHMETIC_OPERATOR",
    "=": "RELATIONAL_OPERATOR",
    "<": "RELATIONAL_OPERATOR",
    ">": "RELATIONAL_OPERATOR",
    ";": "SEMICOLON",
    ",": "COMMA",
    ":": "COLON",
    ".": "DOT",
    "(": "LPARENTHESIS",
    ")": "RPARENTHESIS",
    "[": "LBRACKET",
    "]": "RBRACKET"
  },
  
  "multi_char_tokens": {
    ":=": "ASSIGN_OPERATOR",
    "<>": "RELATIONAL_OPERATOR",
    "<=": "RELATIONAL_OPERATOR",
    ">=": "RELATIONAL_OPERATOR",
    "..": "RANGE_OPERATOR"
  }
}